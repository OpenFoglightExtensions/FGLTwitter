<?xml version="1.0" encoding="UTF-8"?>
<foglight-config version="1.0.3.0" exported-on="2012-08-22T12:46:23.141Z">
	<persistable-script name="getTwitterAccessToken">
		<signature>
			<return type="Object">
				<description><![CDATA[The Twitter4J Access Token]]></description>
			</return>
		</signature>
		<documentation>
			<description><![CDATA[Will return the Twitter Acces Token for the stored OAuth Authentification!]]></description>
		</documentation>
		<annotation name="return_type">
			<value><![CDATA[Object]]></value>
		</annotation>
		<body><![CDATA[
		import twitter4j.*
import twitter4j.api.*
import twitter4j.auth.*
import twitter4j.conf.* 
import twitter4j.json.* 
import twitter4j.management.* 
import twitter4j.media.* 
import twitter4j.util.* 


def token = registry("Twitter.ClientToken")
def key = registry("Twitter.ClientKey")

if (key == null || token == null) return null
else return new AccessToken(token,key)

		]]></body>
	</persistable-script>


	<persistable-script name="getTwitterClient">
		<signature>
			<return type="Object">
				<description><![CDATA[The Twitter4J Authenticated Client]]></description>
			</return>
		</signature>
		<documentation>
			<description><![CDATA[Will return the Twitter Acces Token for the stored OAuth Authentification!]]></description>
		</documentation>
		<annotation name="return_type">
			<value><![CDATA[Object]]></value>
		</annotation>
		<body><![CDATA[
		import twitter4j.*
import twitter4j.api.*
import twitter4j.auth.*
import twitter4j.conf.* 
import twitter4j.json.* 
import twitter4j.management.* 
import twitter4j.media.* 
import twitter4j.util.* 

def token = getTwitterAccessToken()
assert (token != null)

TwitterFactory factory = new TwitterFactory();
Twitter twitter = factory.getInstance();
    twitter.setOAuthConsumer(registry("Twitter.AppKey"),registry("Twitter.AppSecret"));
    twitter.setOAuthAccessToken(token);

return twitter;
		]]></body>
	</persistable-script>
<persistable-script name="tweet">
		<signature>
		<arg name="message" type="String" optional="false">
				<description>A BAsic Subject Argument</description>
			</arg>
	<return type="Object">
				<description><![CDATA[The Tweet]]></description>
			</return>
		</signature>
		<documentation>
			<description><![CDATA[Will tweet using the stored Twitter Acces Token]]></description>
		</documentation>
		<annotation name="return_type">
			<value><![CDATA[Object]]></value>
		</annotation>
		<body><![CDATA[
	def s = args[1]
	
return getTwitterClient().updateStatus(s.size()>140?s[0..139]:s);
		]]></body>
	</persistable-script>
	<persistable-script name="FGLTwitterAction">
		<signature>
			<arg name="Tweet" type="String" optional="false">
				<description>The Tweet (max 140 characters)</description>
			</arg>

			<return type="String">
				<description><![CDATA[This is a Test Result]]></description>
			</return>
		</signature>
		<documentation>
			<description><![CDATA[
		This is a Test Action using a Groovy Scriptlet]]></description>
		</documentation>

<annotation name="action"></annotation>

		<body><![CDATA[
tweet(args[1])
		]]></body>
	</persistable-script>
</foglight-config>
